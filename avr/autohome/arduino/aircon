// This sketch will send out a Nikon D50 trigger signal (probably works with most Nikons)
// See the full tutorial at http://www.ladyada.net/learn/sensors/ir.html
// this code is public domain, please enjoy!
 
int IRledPin =  3;    // LED connected to digital pin 13
#define SANYO_HDR_SPACE        3360
#define SANYO_ONE_SPACE        1160          
#define SANYO_BIT_MARK	        480
#define SANYO_ZERO_SPACE	320

// The setup() method runs once, when the sketch starts
 
void setup()   {                
  // initialize the IR digital pin as an output:
  pinMode(IRledPin, OUTPUT);      
 
  Serial.begin(9600);
}
 
void loop() {
  
  Serial.println("on");
  //switchAircon(1);
  delay(10000);

  Serial.println("off");
  //switchAircon(0);
  delay(10000);
  
}


// This procedure sends a 38KHz pulse to the IRledPin 
// for a certain # of microseconds. We'll use this whenever we need to send codes
void pulseIR(long microsecs) {
  // we'll count down from the number of microseconds we are told to wait
 
  cli();  // this turns off any background interrupts
 
  while (microsecs > 0) {
    // 38 kHz is about 13 microseconds high and 13 microseconds low
   digitalWrite(IRledPin, HIGH);  // this takes about 3 microseconds to happen
   delayMicroseconds(10);         // hang out for 10 microseconds
   digitalWrite(IRledPin, LOW);   // this also takes about 3 microseconds
   delayMicroseconds(10);         // hang out for 10 microseconds
 
   // so 26 microseconds altogether
   microsecs -= 26;
  }
 
  sei();  // this turns them back on
}

void switchAircon(int OnOff) {

  unsigned char currentPulse;
  unsigned char pwrOn[17] =  {0x81, 0x00, 0x14, 0x00, 0xe1, 0x20, 0x0a, 0xbb, 0xe2, 0x00, 0x0b, 0x00, 0x00, 0x40, 0x00, 0x00, 0x15};
  unsigned char pwrOff[17] = {0x81, 0x00, 0x14, 0x00, 0xe1, 0x40, 0x0a, 0xbb, 0xe0, 0x00, 0x0b, 0x00, 0x00, 0x40, 0x02, 0x00, 0x65};
  
  pulseIR(SANYO_HDR_SPACE);

  for (int i = 0; i < 17; i++) {
  
    currentPulse = OnOff?pwrOn[i]:pwrOff[i];
  
    for (int j = 7; j >= 0; j--) {
      if ((currentPulse >> j) & 1) {
        delayMicroseconds(SANYO_ONE_SPACE);
      } else {
        delayMicroseconds(SANYO_ZERO_SPACE);
      }  
        pulseIR(SANYO_BIT_MARK);
    }
  }
    
  delayMicroseconds(SANYO_ZERO_SPACE);
  pulseIR(SANYO_BIT_MARK);
  
}
 
void airconOn() {
  // This is the code for my particular Nikon, for others use the tutorial
  // to 'grab' the proper code from the remote
 
pulseIR(3360);
delayMicroseconds(1560);
pulseIR(480);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(300);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(300);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(300);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(460);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(1160);
pulseIR(460);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(440);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(440);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(360);
pulseIR(440);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(440);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(380);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(1200);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);

}

void airconOff(void) {
 
 pulseIR(3360);
delayMicroseconds(1560);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1140);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1140);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1140);
pulseIR(500);
delayMicroseconds(1180);
pulseIR(480);
delayMicroseconds(1120);
pulseIR(500);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(440);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(500);
delayMicroseconds(320);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(1160);
pulseIR(460);
delayMicroseconds(1200);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(1160);
pulseIR(520);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(1160);
pulseIR(480);
delayMicroseconds(1140);
pulseIR(500);
delayMicroseconds(1140);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(320);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(500);
delayMicroseconds(320);
pulseIR(440);
delayMicroseconds(380);
pulseIR(480);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(500);
delayMicroseconds(320);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(460);
delayMicroseconds(1200);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(380);
pulseIR(460);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(380);
pulseIR(440);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(500);
delayMicroseconds(1140);
pulseIR(480);
delayMicroseconds(340);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(340);
pulseIR(520);
delayMicroseconds(300);
pulseIR(460);
delayMicroseconds(360);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(320);
pulseIR(480);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(320);
pulseIR(460);
delayMicroseconds(360);
pulseIR(480);
delayMicroseconds(300);
pulseIR(460);
delayMicroseconds(1180);
pulseIR(500);
delayMicroseconds(340);
pulseIR(480);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(480);
delayMicroseconds(360);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(300);
pulseIR(500);
delayMicroseconds(340);
pulseIR(500);
delayMicroseconds(320);
pulseIR(500);
delayMicroseconds(300);
pulseIR(520);
delayMicroseconds(1120);
pulseIR(500);
delayMicroseconds(1180);
pulseIR(480);
delayMicroseconds(1120);
pulseIR(520);
delayMicroseconds(320);
pulseIR(440);
delayMicroseconds(360);
pulseIR(440);
delayMicroseconds(1180);
pulseIR(500);
delayMicroseconds(300);
pulseIR(460); 
  
}  